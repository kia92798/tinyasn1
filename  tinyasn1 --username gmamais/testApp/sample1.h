#ifndef _INC_SAMPLE1_H
#define _INC_SAMPLE1_H
/*
Code automatically generated by asn1cc tool
*/

#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif

typedef struct {
        long nCount;
        struct {
        asn1SccSint  a;
        struct {
                long nCount;
                asn1SccSint  arr[10];
            } a1;
        flag  b;
        asn1SccSint  c;
        struct {
                long nCount;
                byte arr[3];
            } d;
        struct {
            unsigned int b:1;
            unsigned int c:1;
            unsigned int d:1;
        } exist;
    } arr[100];
    } MyType;

#define MyType_REQUIRED_BYTES_FOR_ENCODING		939

#define ERR_MyType		1000 /* (SIZE (1..100)) */
#define ERR_MyType_elem_a		1001 /* (1..20)(12) */
#define ERR_MyType_elem_a1		1002 /* (SIZE (1..10)) */
#define ERR_MyType_elem_a1_elem		1003 /* (1..10) */
#define ERR_MyType_elem_c		1004 /* (0..7) */
#define ERR_MyType_elem_d		1005 /* (SIZE (3)) */

void MyType_Initialize(MyType* pVal);
flag MyType_IsConstraintValid(MyType* val, int* pErrCode);
flag MyType_Encode(MyType* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag MyType_Decode(MyType* val, BitStream* pBitStrm, int* pErrCode);


typedef MyType MyTestPDU;

#define MyTestPDU_REQUIRED_BYTES_FOR_ENCODING		939

#define ERR_MyTestPDU		1006 /* (WITH COMPONENT (WITH COMPONENTS {..., a1 (SIZE (5)), c (3) PRESENT, d ('CCFFDD'H)}))(SIZE (1..100)) */

void MyTestPDU_Initialize(MyTestPDU* pVal);
flag MyTestPDU_IsConstraintValid(MyTestPDU* val, int* pErrCode);
flag MyTestPDU_Encode(MyTestPDU* val, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);
flag MyTestPDU_Decode(MyTestPDU* val, BitStream* pBitStrm, int* pErrCode);


extern asn1SccSint  aa;
extern MyTestPDU testPDU;
#ifdef  __cplusplus
}
#endif

#endif
