PKIX1Explicit88 { iso(1) identified-organization(3) dod(6) internet(1)
  security(5) mechanisms(5) pkix(7) id-mod(0) id-pkix1-explicit(18) }

DEFINITIONS EXPLICIT TAGS ::=

BEGIN

-- EXPORTS ALL --

-- IMPORTS NONE --

-- PKIX specific OIDs

--#Namespace: "Cert_"#--

id-pkix  OBJECT IDENTIFIER  ::=
         { iso(1) identified-organization(3) dod(6) internet(1)
                    security(5) mechanisms(5) pkix(7) }

-- PKIX arcs

id-pe OBJECT IDENTIFIER  ::=  { id-pkix 1 }
        -- arc for private certificate extensions
id-qt OBJECT IDENTIFIER ::= { id-pkix 2 }
        -- arc for policy qualifier types
id-kp OBJECT IDENTIFIER ::= { id-pkix 3 }
        -- arc for extended key purpose OIDS
id-ad OBJECT IDENTIFIER ::= { id-pkix 48 }
        -- arc for access descriptors

-- policyQualifierIds for Internet policy qualifiers

id-qt-cps      OBJECT IDENTIFIER ::=  { id-qt 1 }
      -- OID for CPS qualifier
id-qt-unotice  OBJECT IDENTIFIER ::=  { id-qt 2 }
      -- OID for user notice qualifier

-- access descriptor definitions

id-ad-ocsp         OBJECT IDENTIFIER ::= { id-ad 1 }
id-ad-caIssuers    OBJECT IDENTIFIER ::= { id-ad 2 }
id-ad-timeStamping OBJECT IDENTIFIER ::= { id-ad 3 }
id-ad-caRepository OBJECT IDENTIFIER ::= { id-ad 5 }

-- attribute data types

ATTRIBUTE ::= TYPE-IDENTIFIER

Attribute       ::=     SEQUENCE {
      type              ATTRIBUTE.&id({SupportedAttributes}),
      values    SET OF  ATTRIBUTE.&Type({SupportedAttributes}{@type})
}
            -- at least one value is required

SupportedAttributes ATTRIBUTE ::= {
        commonName | x520name | x520LocalityName | x520StateOrProvinceName |
        x520OrganizationName | x520OrganizationalUnitName | x520Title |
        x520dnQualifier | x520countryName | x520SerialNumber | 
        x520Pseudonym | domainComponent | emailAddress, ... }

AttributeType           ::=  OBJECT IDENTIFIER

AttributeTypeAndValue   ::=  SEQUENCE {
        type    ATTRIBUTE.&id({SupportedAttributes}),
        value   ATTRIBUTE.&Type({SupportedAttributes}{@type}) }

-- suggested naming attributes: Definition of the following
--   information object set may be augmented to meet local
--   requirements.  Note that deleting members of the set may
--   prevent interoperability with conforming implementations.
-- presented in pairs: the AttributeType followed by the
--   type definition for the corresponding AttributeValue
--Arc for standard naming attributes

id-at OBJECT IDENTIFIER ::= { joint-iso-ccitt(2) ds(5) 4 }

-- Naming attributes of type X520name

id-at-name              AttributeType ::= { id-at 41 }
id-at-surname           AttributeType ::= { id-at 4 }
id-at-givenName         AttributeType ::= { id-at 42 }
id-at-initials          AttributeType ::= { id-at 43 }
id-at-generationQualifier AttributeType ::= { id-at 44 }

-- Directory string type --

DirectoryString{INTEGER:maxSize} ::= CHOICE {
        teletexString   TeletexString(SIZE (1..maxSize)),
        printableString PrintableString(SIZE(1..maxSize)),
        universalString UniversalString(SIZE(1..maxSize)),
        utf8String      UTF8String(SIZE(1..maxSize)),
        bmpString       BMPString(SIZE(1..maxSize))
}

x520name ATTRIBUTE ::= { X520name IDENTIFIED BY id-at-name }
X520name ::= DirectoryString{ub-name}

-- Naming attributes of type X520CommonName

id-at-commonName        AttributeType ::= { id-at 3 }

commonName ATTRIBUTE ::= {CommonName IDENTIFIED BY id-at-commonName }
CommonName ::= DirectoryString{ub-common-name}

-- Naming attributes of type X520LocalityName

id-at-localityName      AttributeType ::= { id-at 7 }

x520LocalityName ATTRIBUTE ::= { DirectoryString {ub-locality-name} IDENTIFIED BY id-at-localityName }

-- Naming attributes of type X520StateOrProvinceName

id-at-stateOrProvinceName AttributeType ::= { id-at 8 }

x520StateOrProvinceName ATTRIBUTE ::= {DirectoryString {ub-state-name} IDENTIFIED BY id-at-stateOrProvinceName }

-- Naming attributes of type X520OrganizationName

id-at-organizationName  AttributeType ::= { id-at 10 }

x520OrganizationName ATTRIBUTE ::= {DirectoryString {ub-organization-name} IDENTIFIED BY id-at-organizationName }

-- Naming attributes of type X520OrganizationalUnitName

id-at-organizationalUnitName AttributeType ::= { id-at 11 }

x520OrganizationalUnitName ATTRIBUTE ::= { DirectoryString {ub-organizational-unit-name} IDENTIFIED BY id-at-organizationalUnitName }

-- Naming attributes of type X520Title

id-at-title             AttributeType ::= { id-at 12 }

x520Title ATTRIBUTE ::= { DirectoryString { ub-title} IDENTIFIED BY id-at-title }

-- Naming attributes of type X520dnQualifier

id-at-dnQualifier       AttributeType ::= { id-at 46 }

x520dnQualifier ATTRIBUTE ::= { PrintableString IDENTIFIED BY id-at-dnQualifier }

-- Naming attributes of type X520countryName (digraph from IS 3166)

id-at-countryName       AttributeType ::= { id-at 6 }

x520countryName ATTRIBUTE ::=  { PrintableString (SIZE (2)) IDENTIFIED BY id-at-countryName }

-- Naming attributes of type X520SerialNumber

id-at-serialNumber      AttributeType ::= { id-at 5 }

x520SerialNumber ATTRIBUTE ::=  {PrintableString (SIZE (1..ub-serial-number)) IDENTIFIED BY id-at-serialNumber }

-- Naming attributes of type X520Pseudonym

id-at-pseudonym         AttributeType ::= { id-at 65 }

x520Pseudonym ATTRIBUTE ::= {DirectoryString{ub-pseudonym} IDENTIFIED BY id-at-pseudonym }
-- Naming attributes of type DomainComponent (from RFC 2247)

id-domainComponent      AttributeType ::=
                          { 0 9 2342 19200300 100 1 25 }

domainComponent ATTRIBUTE ::= {IA5String IDENTIFIED BY id-domainComponent }

-- Legacy attributes

pkcs-9 OBJECT IDENTIFIER ::=
       { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) 9 }

id-emailAddress          AttributeType ::= { pkcs-9 1 }

emailAddress ATTRIBUTE ::= {IA5String (SIZE (1..ub-emailaddress-length)) IDENTIFIED BY id-emailAddress }

-- naming data types --

Name ::= CHOICE { -- only one possibility for now --
      rdnSequence  RDNSequence }

RDNSequence ::= SEQUENCE OF RelativeDistinguishedName

DistinguishedName ::=   RDNSequence

RelativeDistinguishedName  ::=
                    SET SIZE (1 .. MAX) OF AttributeTypeAndValue


-- certificate and CRL specific structures begin here

Certificate  ::=  SIGNED{TBSCertificate}

TBSCertificate  ::=  SEQUENCE  {  
     version         [0]  Version DEFAULT v1,
     serialNumber         CertificateSerialNumber,
     signature            AlgorithmIdentifier,
     issuer               Name,
     validity             Validity,
     subject              Name,
     subjectPublicKeyInfo SubjectPublicKeyInfo,
     ...,
     [[2:               -- If present, version MUST be v2 or v3
     issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,
     subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL
     ]],
     [[3:               -- If present, version MUST be v3 -- 
     extensions      [3]  Extensions OPTIONAL
     ]], ... }

Version  ::=  INTEGER  {  v1(0), v2(1), v3(2)  }

CertificateSerialNumber  ::=  INTEGER
--#HugeInteger: CertificateSerialNumber#--

Validity ::= SEQUENCE {
     notBefore      Time,
     notAfter       Time  }

Time ::= CHOICE {
     utcTime        UTCTime,
     generalTime    GeneralizedTime }

UniqueIdentifier  ::=  BIT STRING

SubjectPublicKeyInfo  ::=  SEQUENCE  {
     algorithm            AlgorithmIdentifier,
     subjectPublicKey     BIT STRING  }

Extensions  ::=  SEQUENCE SIZE (1..MAX) OF Extension

EXTENSION ::= CLASS {&id        OBJECT IDENTIFIER UNIQUE,
                     &ExtnType
}WITH SYNTAX {SYNTAX &ExtnType
              IDENTIFIED BY &id
}

Extension  ::=  SEQUENCE  {
     extnID      EXTENSION.&id({ExtensionSet}),
     critical    BOOLEAN DEFAULT FALSE,
     extnValue   OCTET STRING (CONTAINING EXTENSION.&ExtnType({ExtensionSet}{@extnID}))
}

ExtensionSet EXTENSION ::= {...}

-- CRL structures

CertificateList  ::=  SIGNED{TBSCertList}

TBSCertList  ::=  SEQUENCE  {
     version                 Version OPTIONAL,
                                  -- if present, MUST be v2
     signature               AlgorithmIdentifier,
     issuer                  Name,
     thisUpdate              Time,
     nextUpdate              Time OPTIONAL,
     revokedCertificates     SEQUENCE OF SEQUENCE  {
          userCertificate         CertificateSerialNumber,
          revocationDate          Time,
          ...,
          [[2:                  -- if present, MUST be v2
          crlEntryExtensions      Extensions OPTIONAL
          ]], ...
                               }  OPTIONAL,
     ...,
     [[2:                       -- if present, MUST be v2
     crlExtensions           [0] Extensions OPTIONAL
     ]], ...}



-- Version, Time, CertificateSerialNumber, and Extensions were
-- defined earlier for use in the certificate structure

ALGORITHM ::= TYPE-IDENTIFIER

AlgorithmIdentifier  ::=  SEQUENCE  {
     algorithm               ALGORITHM.&id({SupportedAlgorithms}),
     parameters              ALGORITHM.&Type({SupportedAlgorithms}{@algorithm}) OPTIONAL  }
                                -- contains a value of the type
                                -- registered for use with the
                                -- algorithm object identifier value

SupportedAlgorithms ALGORITHM ::= {...}

-- X.400 address syntax starts here

ORAddress ::= SEQUENCE {
   built-in-standard-attributes BuiltInStandardAttributes,
   built-in-domain-defined-attributes
                   BuiltInDomainDefinedAttributes OPTIONAL,
   -- see also teletex-domain-defined-attributes
   extension-attributes ExtensionAttributes OPTIONAL }

-- Built-in Standard Attributes

BuiltInStandardAttributes ::= SEQUENCE {
   country-name                  CountryName OPTIONAL,
   administration-domain-name    AdministrationDomainName OPTIONAL,
   network-address           [0] IMPLICIT NetworkAddress OPTIONAL,
     -- see also extended-network-address
   terminal-identifier       [1] IMPLICIT TerminalIdentifier OPTIONAL,
   private-domain-name       [2] PrivateDomainName OPTIONAL,
   organization-name         [3] IMPLICIT OrganizationName OPTIONAL,
     -- see also teletex-organization-name
   numeric-user-identifier   [4] IMPLICIT NumericUserIdentifier
                                 OPTIONAL,
   personal-name             [5] IMPLICIT PersonalName OPTIONAL,
     -- see also teletex-personal-name
   organizational-unit-names [6] IMPLICIT OrganizationalUnitNames
                                 OPTIONAL }
     -- see also teletex-organizational-unit-names

CountryName ::= [APPLICATION 1] CHOICE {
   x121-dcc-code         NumericString
                           (SIZE (ub-country-name-numeric-length)),
   iso-3166-alpha2-code  PrintableString
                           (SIZE (ub-country-name-alpha-length)) }

AdministrationDomainName ::= [APPLICATION 2] CHOICE {
   numeric   NumericString   (SIZE (0..ub-domain-name-length)),
   printable PrintableString (SIZE (0..ub-domain-name-length)) }

NetworkAddress ::= X121Address  -- see also extended-network-address

X121Address ::= NumericString (SIZE (1..ub-x121-address-length))

TerminalIdentifier ::= PrintableString (SIZE
(1..ub-terminal-id-length))

PrivateDomainName ::= CHOICE {
   numeric   NumericString   (SIZE (1..ub-domain-name-length)),
   printable PrintableString (SIZE (1..ub-domain-name-length)) }

OrganizationName ::= PrintableString
                            (SIZE (1..ub-organization-name-length))
  -- see also teletex-organization-name

NumericUserIdentifier ::= NumericString
                            (SIZE (1..ub-numeric-user-id-length))

PersonalName ::= SET {
   surname     [0] IMPLICIT PrintableString
                    (SIZE (1..ub-surname-length)),
   given-name  [1] IMPLICIT PrintableString
                    (SIZE (1..ub-given-name-length)) OPTIONAL,
   initials    [2] IMPLICIT PrintableString
                    (SIZE (1..ub-initials-length)) OPTIONAL,
   generation-qualifier [3] IMPLICIT PrintableString
                    (SIZE (1..ub-generation-qualifier-length))
                    OPTIONAL }
  -- see also teletex-personal-name

OrganizationalUnitNames ::= SEQUENCE SIZE (1..ub-organizational-units)
                             OF OrganizationalUnitName
  -- see also teletex-organizational-unit-names

OrganizationalUnitName ::= PrintableString (SIZE
                    (1..ub-organizational-unit-name-length))

-- Built-in Domain-defined Attributes

BuiltInDomainDefinedAttributes ::= SEQUENCE SIZE
                    (1..ub-domain-defined-attributes) OF
                    BuiltInDomainDefinedAttribute

BuiltInDomainDefinedAttribute ::= SEQUENCE {
   type PrintableString (SIZE
                   (1..ub-domain-defined-attribute-type-length)),
   value PrintableString (SIZE
                   (1..ub-domain-defined-attribute-value-length)) }

-- Extension Attributes

ExtensionAttributes ::= SET SIZE (1..ub-extension-attributes) OF
               ExtensionAttribute

EXTENSION-ATTRIBUTE ::= CLASS {
        &id             INTEGER (0..ub-extension-attributes) UNIQUE,
        &Type
} WITH SYNTAX { &Type IDENTIFIED BY &id }

ExtensionAttribute ::=  SEQUENCE {
   extension-attribute-type [0] IMPLICIT EXTENSION-ATTRIBUTE.&id({SupportedExtensionAttributes}),
   extension-attribute-value [1] EXTENSION-ATTRIBUTE.&Type({SupportedExtensionAttributes}{@extension-attribute-type})}

SupportedExtensionAttributes EXTENSION-ATTRIBUTE ::= {...}

-- Extension types and attribute values

ea-commonName EXTENSION-ATTRIBUTE ::= { PrintableString (SIZE (1..ub-common-name-length)) IDENTIFIED BY 1}

teletexCommonName EXTENSION-ATTRIBUTE ::= {TeletexString (SIZE (1..ub-common-name-length)) IDENTIFIED BY 2 }

teletexOrganizationName EXTENSION-ATTRIBUTE::= {
                TeletexString (SIZE (1..ub-organization-name-length)) IDENTIFIED BY 3 }

teletexPersonalName EXTENSION-ATTRIBUTE ::= {SET {
   surname     [0] IMPLICIT TeletexString
                    (SIZE (1..ub-surname-length)),
   given-name  [1] IMPLICIT TeletexString
                    (SIZE (1..ub-given-name-length)) OPTIONAL,
   initials    [2] IMPLICIT TeletexString
                    (SIZE (1..ub-initials-length)) OPTIONAL,
   generation-qualifier [3] IMPLICIT TeletexString
                    (SIZE (1..ub-generation-qualifier-length))
                    OPTIONAL } IDENTIFIED BY 4 }

teletexOrganizationalUnitNames EXTENSION-ATTRIBUTE ::= { SEQUENCE SIZE
      (1..ub-organizational-units) OF TeletexOrganizationalUnitName
      IDENTIFIED BY 5 }

TeletexOrganizationalUnitName ::= TeletexString
                  (SIZE (1..ub-organizational-unit-name-length))


pDSName EXTENSION-ATTRIBUTE ::= {PrintableString (SIZE (1..ub-pds-name-length))
        IDENTIFIED BY 7 }

physicalDeliveryCountryName EXTENSION-ATTRIBUTE ::= {CHOICE {
   x121-dcc-code NumericString (SIZE
(ub-country-name-numeric-length)),
   iso-3166-alpha2-code PrintableString
                  (SIZE (ub-country-name-alpha-length)) }
                  IDENTIFIED BY 8 }

postalCode EXTENSION-ATTRIBUTE ::= { CHOICE {
   numeric-code NumericString (SIZE (1..ub-postal-code-length)),
   printable-code PrintableString (SIZE (1..ub-postal-code-length)) }
   IDENTIFIED BY 9 }

physicalDeliveryOfficeName EXTENSION-ATTRIBUTE ::= { PDSParameter IDENTIFIED BY 10 }

physicalDeliveryOfficeNumber EXTENSION-ATTRIBUTE ::= {PDSParameter IDENTIFIED BY 11 }

extensionORAddressComponents EXTENSION-ATTRIBUTE ::= {PDSParameter IDENTIFIED BY 12 }

physicalDeliveryPersonalName EXTENSION-ATTRIBUTE ::= {PDSParameter IDENTIFIED BY 13}

physicalDeliveryOrganizationName EXTENSION-ATTRIBUTE ::= {PDSParameter IDENTIFIED BY 14 }

extensionPhysicalDeliveryAddressComponents EXTENSION-ATTRIBUTE ::= {PDSParameter IDENTIFIED BY 15 }

unformattedPostalAddress EXTENSION-ATTRIBUTE ::= { SET {
   printable-address SEQUENCE SIZE (1..ub-pds-physical-address-lines)
         OF PrintableString (SIZE (1..ub-pds-parameter-length))
         OPTIONAL,
   teletex-string TeletexString
         (SIZE (1..ub-unformatted-address-length)) OPTIONAL }
   IDENTIFIED BY 16 }

streetAddress EXTENSION-ATTRIBUTE ::= {PDSParameter IDENTIFIED BY 17 }

postOfficeBoxAddress EXTENSION-ATTRIBUTE ::= {PDSParameter IDENTIFIED BY 18 }

posteRestanteAddress EXTENSION-ATTRIBUTE ::= {PDSParameter IDENTIFIED BY 19 }

uniquePostalName EXTENSION-ATTRIBUTE ::= { PDSParameter IDENTIFIED BY 20 }

localPostalAttributes EXTENSION-ATTRIBUTE ::= {PDSParameter IDENTIFIED BY 21 }

PDSParameter ::= SET {
   printable-string PrintableString
                (SIZE(1..ub-pds-parameter-length)) OPTIONAL,
   teletex-string TeletexString
                (SIZE(1..ub-pds-parameter-length)) OPTIONAL }

extendedNetworkAddress EXTENSION-ATTRIBUTE ::= {CHOICE {
   e163-4-address SEQUENCE {
      number      [0] IMPLICIT NumericString
                       (SIZE (1..ub-e163-4-number-length)),
      sub-address [1] IMPLICIT NumericString
                       (SIZE (1..ub-e163-4-sub-address-length))
                       OPTIONAL },
   psap-address [0] IMPLICIT PresentationAddress }
   IDENTIFIED BY 22 }

PresentationAddress ::= SEQUENCE {
    pSelector     [0] EXPLICIT OCTET STRING OPTIONAL,
    sSelector     [1] EXPLICIT OCTET STRING OPTIONAL,
    tSelector     [2] EXPLICIT OCTET STRING OPTIONAL,
    nAddresses    [3] EXPLICIT SET SIZE (1..MAX) OF OCTET STRING }

terminalType EXTENSION-ATTRIBUTE ::= {INTEGER {
   telex (3),
   teletex (4),
   g3-facsimile (5),
   g4-facsimile (6),
   ia5-terminal (7),
   videotex (8) } (0..ub-integer-options)
   IDENTIFIED BY 23 }

-- Extension Domain-defined Attributes

teletexDomainDefinedAttributes EXTENSION-ATTRIBUTE ::= {SEQUENCE SIZE
   (1..ub-domain-defined-attributes) OF TeletexDomainDefinedAttribute
   IDENTIFIED BY 6 }

TeletexDomainDefinedAttribute ::= SEQUENCE {
        type TeletexString
               (SIZE (1..ub-domain-defined-attribute-type-length)),
        value TeletexString
               (SIZE (1..ub-domain-defined-attribute-value-length)) }

--  specifications of Upper Bounds MUST be regarded as mandatory
--  from Annex B of ITU-T X.411 Reference Definition of MTS Parameter
--  Upper Bounds

-- Upper Bounds
ub-name INTEGER ::= 32768
ub-common-name INTEGER ::= 64
ub-locality-name INTEGER ::= 128
ub-state-name INTEGER ::= 128
ub-organization-name INTEGER ::= 64
ub-organizational-unit-name INTEGER ::= 64
ub-title INTEGER ::= 64
ub-serial-number INTEGER ::= 64
ub-match INTEGER ::= 128
ub-emailaddress-length INTEGER ::= 128
ub-common-name-length INTEGER ::= 64
ub-country-name-alpha-length INTEGER ::= 2
ub-country-name-numeric-length INTEGER ::= 3
ub-domain-defined-attributes INTEGER ::= 4
ub-domain-defined-attribute-type-length INTEGER ::= 8
ub-domain-defined-attribute-value-length INTEGER ::= 128
ub-domain-name-length INTEGER ::= 16
ub-extension-attributes INTEGER ::= 256
ub-e163-4-number-length INTEGER ::= 15
ub-e163-4-sub-address-length INTEGER ::= 40
ub-generation-qualifier-length INTEGER ::= 3
ub-given-name-length INTEGER ::= 16
ub-initials-length INTEGER ::= 5
ub-integer-options INTEGER ::= 256
ub-numeric-user-id-length INTEGER ::= 32
ub-organization-name-length INTEGER ::= 64
ub-organizational-unit-name-length INTEGER ::= 32
ub-organizational-units INTEGER ::= 4
ub-pds-name-length INTEGER ::= 16
ub-pds-parameter-length INTEGER ::= 30
ub-pds-physical-address-lines INTEGER ::= 6
ub-postal-code-length INTEGER ::= 16
ub-pseudonym INTEGER ::= 128
ub-surname-length INTEGER ::= 40
ub-terminal-id-length INTEGER ::= 24
ub-unformatted-address-length INTEGER ::= 180
ub-x121-address-length INTEGER ::= 16

-- Note - upper bounds on string types, such as TeletexString, are
-- measured in characters.  Excepting PrintableString or IA5String, a
-- significantly greater number of octets will be required to hold
-- such a value.  As a minimum, 16 octets, or twice the specified
-- upper bound, whichever is the larger, should be allowed for
-- TeletexString.  For UTF8String or UniversalString at least four
-- times the upper bound should be allowed.

-- information object classes used in the defintion 
-- of certificates and CRLs 
-- Parameterized Type SIGNED 

SIGNED{ToBeSigned} ::= SEQUENCE {
  toBeSigned  ToBeSigned,
  algorithm   AlgorithmIdentifier,
  signature   BIT STRING
}

END
